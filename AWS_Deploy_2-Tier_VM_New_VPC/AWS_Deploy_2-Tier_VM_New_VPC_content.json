{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(000A) Launch Two tier Application Infrastructure",
    "Parameters": {
        "SSHLocation": {
            "Description": "An individual IPv4/IPv6 address (or) A range of IPv4/IPv6 addresses can be specified. These IP addresses specified will be allowed to SSH the EC2 instance.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "ImageID": {
            "Description": "Image ID (AMI) to be used for provisioning instance in AWS. AMI provides the information required to launch an instance, which is a virtual server in the cloud.",
            "Type": "String",
            "source": "image.list_image"
        },
        "KeypairName": {
            "Description": "Existing Keypair name to be used for provisioning instance in AWS. Amazon EC2 uses public-key cryptography to encrypt piece of data using public keys and decrypt the same using private keys. Public & Private keys known as Keypair.",
            "Type": "String",
            "source": "keypair.list_keypair"
        },
        "InstanceType": {
            "Description": "Instance Type (Flavor) name to be used for provisioning instance in AWS. Instance types comprise varying combinations of CPU, memory, storage, and networking capacity.",
            "Default": "t2.micro",
            "Type": "String",
            "AllowedValues": [
                "t2.small",
                "t2.micro",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge"
            ]
        }
    },
    "Mappings": {
        "SubnetConfig": {
            "VPC": {
                "CIDR": "10.30.0.0/16"
            },
            "PublicSubnet": {
                "CIDR": "10.30.1.0/24"
            },
            "PrivateSubnet": {
                "CIDR": "10.30.2.0/24"
            }
        },
        "NatRegionMap": {
            "us-east-1": {
                "AMI": "ami-184dc970"
            },
            "us-west-1": {
                "AMI": "ami-a98396ec"
            },
            "us-west-2": {
                "AMI": "ami-290f4119"
            },
            "eu-west-1": {
                "AMI": "ami-14913f63"
            },
            "eu-central-1": {
                "AMI": "ami-ae380eb3"
            },
            "sa-east-1": {
                "AMI": "ami-8122969c"
            },
            "ap-southeast-1": {
                "AMI": "ami-6aa38238"
            },
            "ap-southeast-2": {
                "AMI": "ami-893f53b3"
            },
            "ap-northeast-1": {
                "AMI": "ami-27d6e626"
            }
        }
    },
    "Resources": {
        "McomVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "VPC",
                        "CIDR"
                    ]
                },
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "McomVPC"
                    }
                ]
            }
        },
        "McomIG": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "McomIG"
                    }
                ]
            }
        },
        "GatewayToInternet": {
            "DependsOn": [
                "McomVPC",
                "McomIG"
            ],
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "McomVPC"
                },
                "InternetGatewayId": {
                    "Ref": "McomIG"
                }
            }
        },
        "McomPublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "McomVPC"
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "PublicSubnet",
                        "CIDR"
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "McomPublicSubnet"
                    }
                ]
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "McomPublicRouteTable"
                    }
                ],
                "VpcId": {
                    "Ref": "McomVPC"
                }
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn" : "GatewayToInternet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "McomIG"
                }
            }
        },
        "PublicSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "McomPublicSubnet"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "McomVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "MComPublicNetworkAcl"
                    }
                ]
            }
        },
        "PublicSubnetNetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "McomPublicSubnet"
                },
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                }
            }
        },
        "InboundHTTPPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Egress": "false"
            }
        },
        "OutboundPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "RuleNumber": "100",
                "Protocol": "6",
                "CidrBlock": "0.0.0.0/0",
                "RuleAction": "allow",
                "Egress": "true",
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                }
            }
        },
        "McomPrivateSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "McomVPC"
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "PrivateSubnet",
                        "CIDR"
                    ]
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "McomPrivateSubnet"
                    }
                ]
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "McomVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "MComPrivateRouteTable"
                    }
                ]
            }
        },
        "PrivateSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "McomPrivateSubnet"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PrivateNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "McomVPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "MComPrivateNetworkAcl"
                    }
                ]
            }
        },
        "PrivateSubnetNetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "McomPrivateSubnet"
                },
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                }
            }
        },
        "InboundMySQLPrivateNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "RuleNumber": "100",
                "RuleAction": "allow",
                "Protocol": "6",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "CidrBlock": "0.0.0.0/0",
                "Egress": "false"
            }
        },
        "OutboundPrivateNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "Protocol": "6",
                "RuleNumber": "100",
                "RuleAction": "allow",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "NatSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "NAT Security Group",
                "VpcId": {
                    "Ref": "McomVPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    }
                ]
            }
        },
        "NatSecurityGroupIngress80": {
            "DependsOn": [
                "NatSecurityGroup"
            ],
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "NatSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "SourceSecurityGroupId": {
                    "Ref": "DBServerSecurityGroup"
                }
            }
        },
        "NatSecurityGroupIngress443": {
            "DependsOn": [
                "NatSecurityGroup"
            ],
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "NatSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "SourceSecurityGroupId": {
                    "Ref": "DBServerSecurityGroup"
                }
            }
        },
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH and HTTP access to WebServer",
                "VpcId": {
                    "Ref": "McomVPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "NATInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": "t2.micro",
                "KeyName": {
                    "Ref": "KeypairName"
                },
                "SourceDestCheck": "false",
                "ImageId": {
                    "Fn::FindInMap": [
                        "NatRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "GroupSet": [
                            {
                                "Ref": "NatSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": {
                            "Ref": "McomPublicSubnet"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NAT"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "yum update -y && yum install -y yum-cron && chkconfig yum-cron on"
                            ]
                        ]
                    }
                }
            }
        },
        "PrivateRoute": {
            "DependsOn": [
                "PrivateRouteTable",
                "NATInstance"
            ],
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "NATInstance"
                }
            }
        },
        "WebServer": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "KeypairName"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "ImageId": {
                    "Ref": "ImageID"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "WebServerSecurityGroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "McomPublicSubnet"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WebServer"
                    }
                ]
            }
        },
        "AssociateElasticIpToWebServer": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "InstanceId": {
                    "Ref": "WebServer"
                },
                "Domain": {
                    "Ref": "McomVPC"
                }
            }
        },
        "DBServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH and MYSQL access to webserver",
                "VpcId": {
                    "Ref": "McomVPC"
                },
                "SecurityGroupIngress": [
                    {
                        "FromPort": "22",
                        "ToPort": "22",
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupId": {
                            "Ref": "NatSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "SourceSecurityGroupId": {
                            "Ref": "WebServerSecurityGroup"
                        }
                    }
                ]
            }
        },
        "DBServer": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "KeypairName"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "ImageId": {
                    "Ref": "ImageID"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "DBServerSecurityGroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "McomPrivateSubnet"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "DBServer"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "VpcId": {
            "Description": "VPC",
            "Value": {
                "Ref": "McomVPC"
            }
        },
        "PublicSubnet": {
            "Description": "Public Subnet",
            "Value": {
                "Ref": "McomPublicSubnet"
            }
        },
        "PrivateSubnet": {
            "Description": "Private Subnet",
            "Value": {
                "Ref": "McomPrivateSubnet"
            }
        },
        "WebserverInstance": {
            "Description": "WebserverInstance",
            "Value": {
                "Fn::GetAtt": [
                    "WebServer",
                    "PublicIp"
                ]
            }
        },
        "DBServerInstance": {
            "Description": "DBServerInstance",
            "Value": {
                "Fn::GetAtt": [
                    "DBServer",
                    "PrivateIp"
                ]
            }
        },
        "NatInstance": {
            "Description": "NatInstance",
            "Value": {
                "Fn::GetAtt": [
                    "NATInstance",
                    "PublicIp"
                ]
            }
        }
    }
}
